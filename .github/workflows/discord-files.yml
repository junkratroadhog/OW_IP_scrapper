name: Upload OW_IP Scripts to Discord

on:
  push:
    branches:
      - main

jobs:
  send-to-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Detect files to upload
        shell: bash
        id: detect_files
        run: |
          FILES=()

          # Check for the two specific root files
          if [ -f OW_IP.BAT ]; then
            FILES+=("OW_IP.BAT")
          fi

          if [ -f OW_IP_Scrapper.ps1 ]; then
            FILES+=("OW_IP_Scrapper.ps1")
          fi

          if [ ${#FILES[@]} -eq 0 ]; then
            echo "No files found to upload. Exiting."
            echo "files_found=false" >> $GITHUB_OUTPUT
          else
            echo "Files to upload: ${FILES[@]}"
            echo "files_found=true" >> $GITHUB_OUTPUT
            echo "files_list=${FILES[*]}" >> $GITHUB_OUTPUT
          fi

      - name: Upload files to Discord webhooks
        if: steps.detect_files.outputs.files_found == 'true'
        shell: bash
        run: |
          FILES="${{ steps.detect_files.outputs.files_list }}"
          echo "Uploading files: $FILES"

          # Dynamically detect all webhook secrets
          WEBHOOK_VARS=$(compgen -v | grep '^DISCORD_WEBHOOK_')

          for VAR_NAME in $WEBHOOK_VARS; do
            WEBHOOK=${!VAR_NAME}
            echo "Sending files to $VAR_NAME..."

            # Build curl command for all files in one message
            CURL_CMD="curl -H 'Content-Type: multipart/form-data' \
                       -F 'payload_json={\"content\": \"Repo updated â†’ sending OW_IP scripts\"}'"

            for FILE in $FILES; do
              CURL_CMD="$CURL_CMD -F file=@./$FILE;type=application/octet-stream"
            done

            # Execute curl command safely
            eval $CURL_CMD || true
            echo "Files sent successfully to $VAR_NAME."
          done
