name: Upload OW_IP Scripts to Discord

on:
  push:
    branches:
      - main

jobs:
  send-to-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare list of files to upload
        id: files
        shell: bash
        run: |
          FILES=()
          if [[ -f OW_IP.BAT ]]; then FILES+=("OW_IP.BAT"); fi
          if [[ -f OW_IP_Scrapper.ps1 ]]; then FILES+=("OW_IP_Scrapper.ps1"); fi

          if [ ${#FILES[@]} -eq 0 ]; then
            echo "No files found to upload. Exiting."
            echo "files_found=false" >> $GITHUB_OUTPUT
          else
            echo "Files to upload: ${FILES[@]}"
            echo "files_found=true" >> $GITHUB_OUTPUT
            echo "files_list=${FILES[*]}" >> $GITHUB_OUTPUT

      - name: Send files to all Discord webhooks dynamically
        if: steps.files.outputs.files_found == 'true'
        shell: bash
        run: |
          # Dynamically detect all secrets starting with DISCORD_WEBHOOK_
          WEBHOOKS=()
          for name in $(printenv | grep '^DISCORD_WEBHOOK_' | cut -d= -f1); do
            WEBHOOKS+=("${!name}")
          done

          if [ ${#WEBHOOKS[@]} -eq 0 ]; then
            echo "No Discord webhook secrets found. Exiting."
            exit 0
          fi

          # Get the list of files from previous step
          IFS=' ' read -ra FILES_ARRAY <<< "${{ steps.files.outputs.files_list }}"

          # Upload all files in a single message to each webhook
          for WEBHOOK in "${WEBHOOKS[@]}"; do
            echo "Uploading files to $WEBHOOK..."
            CURL_FILES=""
            for f in "${FILES_ARRAY[@]}"; do
              CURL_FILES+="-F file[]=@$f "
            done

            eval curl -H "Content-Type: multipart/form-data" \
                 -F "payload_json={\"content\": \"Repo updated â†’ sending OW_IP files\"}" \
                 $CURL_FILES \
                 "$WEBHOOK"
          done
